[gd_resource type="Sky" load_steps=11 format=3 uid="uid://xhvvs7xf1fft"]

[sub_resource type="Shader" id="Shader_e5lqs"]
code = "shader_type sky;
render_mode use_half_res_pass;


// Sky Gradients
uniform vec3 day_bottom_color : source_color = vec3(1.0, 1.0, 1.0);
uniform vec3 day_top_color : source_color = vec3(1.0, 1.0, 1.0);

uniform vec3 sunset_bottom_color : source_color = vec3(0.0, 0.0, 0.0);
uniform vec3 sunset_top_color : source_color = vec3(0.0, 0.0, 0.0);

uniform vec3 night_bottom_color : source_color = vec3(0.0, 0.0, 0.0);
uniform vec3 night_top_color : source_color = vec3(0.0, 0.0, 0.0);


// Horizon Stuff
uniform vec3 horizon_color_day : source_color = vec3(1.0, 1.0, 1.0);
uniform vec3 horizon_color_sunset : source_color = vec3(1.0, 1.0, 1.0);
uniform vec3 horizon_color_night : source_color = vec3(0.0, 0.8, 1.0);
uniform float horizon_falloff: hint_range(0.0, 1.0, 0.1);


// Sun Stuff
uniform vec3 sun_col: source_color = vec3(1.0);
uniform float sun_size: hint_range(0.01, 1.0) = 1.0;
uniform float sun_blur: hint_range(0.01, 1.0) = 0.01;


// Moon Stuff
uniform vec3 moon_col: source_color = vec3(1.0);
uniform float moon_size: hint_range(0.01, 1.0) = 1.0;
uniform float moon_crescent_offset: hint_range(-1.0, 1.0) = 0.5;


// Clouds Stuff
uniform sampler2D clouds_texture: filter_linear_mipmap;
uniform sampler2D clouds_distort_texture: filter_linear_mipmap;
uniform sampler2D clouds_noise_texture: filter_linear_mipmap;
uniform vec3 clouds_main_color: source_color = vec3(1.0, 1.0, 1.0);
uniform vec3 clouds_edge_color: source_color = vec3(1.0, 1.0, 1.0);
uniform float clouds_speed: hint_range(0.0, 0.1, 0.01);
uniform float clouds_scale: hint_range(0.0, 1.0, 0.01);
uniform float clouds_cutoff: hint_range(0.0, 1.0, 0.01);
uniform float clouds_fuzziness: hint_range(0.0, 1.0, 0.01);


// Star Stuff
uniform sampler2D stars_texture: filter_linear_mipmap;
uniform float stars_cutoff;
uniform float stars_speed: hint_range(0.0, 0.1);





void sky() {
	vec2 sky_uv = EYEDIR.xz / EYEDIR.y;
	
	
	float day_amount = clamp(LIGHT0_DIRECTION.y, 0.0, 1.0);
	vec3 gradient_day = mix(day_bottom_color, day_top_color, clamp(EYEDIR.y, 0.0, 1.0)) * day_amount;
	
	float sunset_amount = clamp(1.0 - abs(LIGHT0_DIRECTION.y), 0.0, 1.0);
	vec3 gradient_sunset = mix(sunset_bottom_color, sunset_top_color, clamp(EYEDIR.y, 0.0, 1.0)) * sunset_amount;
	
	float night_amount = clamp(-LIGHT0_DIRECTION.y, 0.0, 1.0);
	vec3 gradient_night = mix(night_bottom_color, night_top_color, clamp(EYEDIR.y, 0.0, 1.0)) * night_amount;
	
	
	vec3 sky_gradients = gradient_day + gradient_sunset + gradient_night;
	
	
	
	
	float horizon = 1.0 - abs(EYEDIR.y + horizon_falloff);
	
	vec3 horizon_glow_amount_day = clamp(horizon * clamp(LIGHT0_DIRECTION.y, 0.0, 1.0), 0.0, 1.0) * horizon_color_day;
	vec3 horizon_glow_amount_sunset = clamp(horizon * clamp(1.0 - abs(LIGHT0_DIRECTION.y), 0.0, 1.0), 0.0, 1.0) * horizon_color_sunset;
	vec3 horizon_glow_night = clamp(horizon * clamp(-LIGHT0_DIRECTION.y, 0.0, 1.0), 0.0, 1.0) * horizon_color_night;
	
	vec3 horizon_glow = horizon_glow_amount_day + horizon_glow_amount_sunset + horizon_glow_night;
	
	
	
	
	
	float sun_distance = distance(EYEDIR.xyz, LIGHT0_DIRECTION);
	float sun_power = 1.0 - clamp(sun_distance / sun_size, 0.0, 1.0);
	float sun_disc = clamp(sun_power / sun_blur, sun_power, 1.0);
	vec3 sun = sun_col * sun_disc;
	
	
	
	float moon_distance = distance(EYEDIR.xyz, -LIGHT0_DIRECTION);
	float moon_power = 1.0 - clamp(moon_distance / moon_size, 0.0, 1.0);
	float moon_disc = clamp(moon_power / 0.01, moon_power, 1.0);
	
	float moon_crescent_distance = distance(vec3(EYEDIR.x + moon_crescent_offset, EYEDIR.yz), -LIGHT0_DIRECTION);
	float moon_crescent_power = 1.0 - clamp(moon_crescent_distance / moon_size, 0.0, 1.0);
	float moon_crescent_disc = clamp(moon_crescent_power / 0.01, moon_crescent_power, 1.0);
	
	vec3 moon_crescent = moon_col * moon_crescent_disc;
	
	vec3 moon = clamp( (moon_col * moon_disc) - moon_crescent, 0.0 , 1.0);
	
	
	
	
	
	float clouds_movement = TIME * clouds_speed * 0.5;
	float clouds_base_noise = texture(clouds_texture, (sky_uv + clouds_movement ) * clouds_scale).r;
	float noise1 = texture(clouds_distort_texture, (sky_uv + clouds_base_noise + (clouds_movement * 0.75)) * clouds_scale).r;
	float noise2 = texture(clouds_noise_texture, (sky_uv + noise1 + (clouds_movement * 0.25)) * clouds_scale).r;
	
	float clouds_noise_value = clamp(noise1 * noise2, 0.0, 1.0) * clamp(EYEDIR.y, 0.0, 1.0);
	
	float clouds_value = clamp(smoothstep(clouds_cutoff, clouds_cutoff + clouds_fuzziness, clouds_noise_value), 0.0, 1.0);
	
	
	vec3 clouds = mix(clouds_edge_color,  clouds_main_color , clouds_value) * clouds_value;
	
	float clouds_negative = 1.0 - clouds_value;
	
	
	vec3 stars = texture(stars_texture, sky_uv + (stars_speed * TIME)).rgb;
	stars *= clamp(-LIGHT0_DIRECTION.y, 0.0, 1.0);
	stars = step(stars_cutoff, stars);
	
	
	
	vec3 sun_moon = sun + moon;
	sun_moon = clamp(sun_moon * clouds_negative, 0.0, 1.0);
	
	sky_gradients = clamp(sky_gradients * clouds_negative, 0.0, 1.0);
	
	
	
	vec3 sky = horizon_glow + sky_gradients + sun_moon + stars + clouds;
	
	
	
	COLOR = sky;
}"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_1q3x6"]
seed = 140

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_005nb"]
noise = SubResource("FastNoiseLite_1q3x6")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_l64ke"]
seed = 50
frequency = 0.02

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_pkp15"]
noise = SubResource("FastNoiseLite_l64ke")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_kwg2u"]
seed = 130
frequency = 0.0228

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_8j75g"]
noise = SubResource("FastNoiseLite_kwg2u")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_hqest"]
noise_type = 2
frequency = 0.02
fractal_octaves = 1
cellular_jitter = 0.31

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_mbi8a"]
noise = SubResource("FastNoiseLite_hqest")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_e2cnm"]
shader = SubResource("Shader_e5lqs")
shader_parameter/day_bottom_color = Color(0.203922, 0.701961, 1, 1)
shader_parameter/day_top_color = Color(0.152941, 0.462745, 1, 1)
shader_parameter/sunset_bottom_color = Color(0.392157, 0.270588, 0.2, 1)
shader_parameter/sunset_top_color = Color(0.145098, 0.247059, 0.392157, 1)
shader_parameter/night_bottom_color = Color(0, 0, 0, 1)
shader_parameter/night_top_color = Color(0, 0, 0, 1)
shader_parameter/horizon_color_day = Color(1, 1, 1, 1)
shader_parameter/horizon_color_sunset = Color(1, 1, 1, 1)
shader_parameter/horizon_color_night = Color(0, 0.8, 1, 1)
shader_parameter/horizon_falloff = 1.0
shader_parameter/sun_col = Color(1, 1, 1, 1)
shader_parameter/sun_size = 0.143
shader_parameter/sun_blur = 0.01
shader_parameter/moon_col = Color(1, 1, 1, 1)
shader_parameter/moon_size = 0.185
shader_parameter/moon_crescent_offset = -0.1
shader_parameter/clouds_main_color = Color(0.694118, 0.694118, 0.694118, 1)
shader_parameter/clouds_edge_color = Color(0.0784314, 0.223529, 1, 1)
shader_parameter/clouds_speed = 0.08
shader_parameter/clouds_scale = 0.09
shader_parameter/clouds_cutoff = 0.12
shader_parameter/clouds_fuzziness = 0.09
shader_parameter/stars_cutoff = 0.04
shader_parameter/stars_speed = 0.1
shader_parameter/clouds_texture = SubResource("NoiseTexture2D_8j75g")
shader_parameter/clouds_distort_texture = SubResource("NoiseTexture2D_005nb")
shader_parameter/clouds_noise_texture = SubResource("NoiseTexture2D_pkp15")
shader_parameter/stars_texture = SubResource("NoiseTexture2D_mbi8a")

[resource]
sky_material = SubResource("ShaderMaterial_e2cnm")
